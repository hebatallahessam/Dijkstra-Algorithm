/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package network.project;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import javax.swing.JOptionPane;


/**
 *
 * @author Hebat-allah Essam
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    int source;
    String tempp="";
     static int counter;
    Image img;
    Graphics2D gfx;
    int x,y;
    int nodesize=45;
    int id=0;
    int select=-1;
    int currentnode;
    HashMap<Integer, Point> location=new HashMap<>();
    HashMap<Integer, HashSet> nodes=new HashMap<>();
    ArrayList<Node> graph=new ArrayList<>();
     static boolean finished=false;
    static ArrayList<Node> path=new ArrayList<>();
    static ArrayList<Edge> available=new ArrayList<>();
    public GUI() {
        initComponents();
        jLabel1.setVisible(false);
        img=jPanel1.createImage(jPanel1.getWidth(), jPanel1.getHeight());
        gfx=(Graphics2D)img.getGraphics();
        
        
    }
    public void draw(){
        gfx.setColor(Color.WHITE);
        gfx.fillRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight());
        
        for(int i=0;i<location.size();i++){
            
            Point temp=(Point)location.values().toArray()[i];
            gfx.setColor(Color.DARK_GRAY);
            gfx.fillOval(temp.x-nodesize/2, temp.y-nodesize/2, nodesize, nodesize);
            gfx.drawString("Node"+(i+1),temp.x-13 , temp.y+(15+nodesize/2) );
            
        }
            for(int j=0;j<nodes.size();j++){
                Point psource=(Point)location.values().toArray()[j];
            for(Integer dest: (HashSet<Integer>)nodes.values().toArray()[j]){
             Point pdest=(Point) location.get(dest);
             gfx.drawLine(psource.x,psource.y,pdest.x,pdest.y);
            }
            }
        
          jPanel1.getGraphics().drawImage( img, 0, 0, this);
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);//To change body of generated methods, choose Tools | Templates.
        draw();
    }
     public  void getPath(Node start){
       finished=true;
        start.visited=true;
        path.add(start);
        for(int i=0;i<graph.size();i++){    
        if(graph.get(i).visited==false){
           finished=false;
           break;
        }
        }
        if(finished) return;
        for(int j=0;j<start.children.size();j++){//update costs of nodes
            int tempcost;
          if(start.children.get(j).nodeno.visited==false){
           tempcost=start.cost+start.children.get(j).cost;
           if(tempcost<start.children.get(j).nodeno.cost){
           start.children.get(j).nodeno.cost=tempcost;
           }
          }}
       
      for(int j=0;j<start.children.size();j++){//add nodes to available array
           boolean repeated=false;
        for(int i=0;i<available.size();i++){
            if(start.children.get(j).nodeno==available.get(i).nodeno)
                repeated=true;
        
        }
          if(start.children.get(j).nodeno.visited==false && repeated==false){
             available.add(start.children.get(j));}
            }
     
     
      Node min=available.get(0).nodeno;
      int minIndex=0;
      for(int i=0;i<available.size();i++){//choose the lowest path
          if(min.cost>available.get(i).nodeno.cost)
          {min=available.get(i).nodeno;
          minIndex=i;
          }
      }
       available.remove(minIndex);
      getPath(min);
     
         
}
    private int selectedNode(int xcoor,int ycoor){
    for(int i=0;i<location.size();i++){
    Point p=(Point)location.values().toArray()[i];
    int deltax=xcoor-(p.x-nodesize/2);
     int deltay=ycoor-(p.y-nodesize/2);
     if(Math.sqrt(deltax * deltax + deltay * deltay) <= nodesize+6){
        
     return (int) location.keySet().toArray()[i];
     }
    
    }
    return -1;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("get Path");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 51));
        jLabel1.setText("none");

        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 102, 102));
        jButton2.setText("Next Node");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 43, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(401, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Dijkstra's Algorithm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(50, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
        x=evt.getX();
        y=evt.getY();
       select=selectedNode(x,y);
       if(select==-1){
        
        location.put(id, new Point(x,y));
        graph.add(new Node(id,1000));
        nodes.put(id, new HashSet());
         System.out.println(graph.get(id).nodeno);
        id++;
        draw();
        System.out.println(location);
        System.out.println(nodes);
       
        
        
       }
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        // TODO add your handling code here:
        int destination=selectedNode(evt.getX(),evt.getY());
        if(destination!=select && destination!=-1 && select!=-1){
        nodes.get(destination).add(select);
          nodes.get(select).add(destination);
        
         graph.get(destination).children.add(new Edge(graph.get(select)));
    System.out.println(graph.get(destination).children);
      
        graph.get(select).children.add(new Edge(graph.get(destination)));
        draw();
        }
      
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
         currentnode=select;
         int k=0;
         for (Integer dest: (HashSet<Integer>) nodes.values().toArray()[select]){
             int temp=Integer.parseInt(
                  JOptionPane.showInputDialog(this,"Node"+(select+1)+" to Node"+(dest+1) , "Enter Link Cost", JOptionPane.QUESTION_MESSAGE));
          graph.get(select).children.get(k).cost=temp;
          k++;
          
         }
         draw();}
        
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 jLabel1.setVisible(false);
        path.clear();
        counter=0;
        available.clear();
        for(int i=0;i<graph.size();i++){
           graph.get(i).cost=1000;
           graph.get(i).visited=false;
        }        
        String s=JOptionPane.showInputDialog(this,"Enter The Number Of The Starting Node" , "Start Node", JOptionPane.QUESTION_MESSAGE);
        source=Integer.parseInt(s)-1;
      graph.get(source).cost=0;
       getPath(graph.get(source));
//      graph.get(2).cost=0;
//        getPath(graph.get(2));
        
         counter=0;
            tempp="from Node"+(path.get(counter).nodeno+1)+" to Node"+(source+1) +" the lowest cost is "+path.get(counter).cost;
          jLabel1.setText(tempp); 
          jLabel1.setVisible(true);
                counter++; 
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          
        if(counter<graph.size()){
        tempp="from Node"+(path.get(counter).nodeno+1)+" to Node"+(source+1)+ " the lowest cost is "+path.get(counter).cost;
          jLabel1.setText(tempp);  }
        counter++;
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
